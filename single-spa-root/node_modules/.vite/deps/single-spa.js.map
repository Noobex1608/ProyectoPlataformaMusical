{
  "version": 3,
  "sources": ["../../single-spa/node_modules/.pnpm/custom-event@1.0.1/node_modules/custom-event/index.js", "../../single-spa/src/applications/app-errors.js", "../../single-spa/src/applications/app.helpers.js", "../../single-spa/src/utils/assign.js", "../../single-spa/src/utils/find.js", "../../single-spa/src/lifecycles/lifecycle.helpers.js", "../../single-spa/src/devtools/profiler.js", "../../single-spa/src/lifecycles/bootstrap.js", "../../single-spa/src/lifecycles/unmount.js", "../../single-spa/src/lifecycles/mount.js", "../../single-spa/src/lifecycles/update.js", "../../single-spa/src/parcels/mount-parcel.js", "../../single-spa/src/lifecycles/prop.helpers.js", "../../single-spa/src/applications/timeouts.js", "../../single-spa/src/lifecycles/load.js", "../../single-spa/src/utils/runtime-environment.js", "../../single-spa/src/navigation/navigation-events.js", "../../single-spa/src/jquery-support.js", "../../single-spa/src/lifecycles/unload.js", "../../single-spa/src/applications/apps.js", "../../single-spa/src/navigation/reroute.js", "../../single-spa/src/start.js", "../../single-spa/src/devtools/devtools.js", "../../single-spa/src/single-spa.js"],
  "sourcesContent": ["\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n", "import { objectType, toName } from \"./app.helpers\";\n\nlet errorHandlers = [];\n\nexport function handleAppError(err, app, newStatus) {\n  const transformedErr = transformErr(err, app, newStatus);\n\n  if (errorHandlers.length) {\n    errorHandlers.forEach((handler) => handler(transformedErr));\n  } else {\n    setTimeout(() => {\n      throw transformedErr;\n    });\n  }\n}\n\nexport function addErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        28,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  errorHandlers.push(handler);\n}\n\nexport function removeErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        29,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  let removedSomething = false;\n  errorHandlers = errorHandlers.filter((h) => {\n    const isHandler = h === handler;\n    removedSomething = removedSomething || isHandler;\n    return !isHandler;\n  });\n\n  return removedSomething;\n}\n\nexport function formatErrorMessage(code, msg, ...args) {\n  return `single-spa minified message #${code}: ${\n    msg ? msg + \" \" : \"\"\n  }See https://single-spa.js.org/error/?code=${code}${\n    args.length ? `&arg=${args.join(\"&arg=\")}` : \"\"\n  }`;\n}\n\nexport function transformErr(ogErr, appOrParcel, newStatus) {\n  const errPrefix = `${objectType(appOrParcel)} '${toName(\n    appOrParcel\n  )}' died in status ${appOrParcel.status}: `;\n\n  let result;\n\n  if (ogErr instanceof Error) {\n    try {\n      ogErr.message = errPrefix + ogErr.message;\n    } catch (err) {\n      /* Some errors have read-only message properties, in which case there is nothing\n       * that we can do.\n       */\n    }\n    result = ogErr;\n  } else {\n    console.warn(\n      formatErrorMessage(\n        30,\n        __DEV__ &&\n          `While ${appOrParcel.status}, '${toName(\n            appOrParcel\n          )}' rejected its lifecycle function promise with a non-Error. This will cause stack traces to not be accurate.`,\n        appOrParcel.status,\n        toName(appOrParcel)\n      )\n    );\n    try {\n      result = Error(errPrefix + JSON.stringify(ogErr));\n    } catch (err) {\n      // If it's not an Error and you can't stringify it, then what else can you even do to it?\n      result = ogErr;\n    }\n  }\n\n  result.appOrParcelName = toName(appOrParcel);\n\n  // We set the status after transforming the error so that the error message\n  // references the state the application was in before the status change.\n  appOrParcel.status = newStatus;\n\n  return result;\n}\n", "import { handleAppError } from \"./app-errors.js\";\n\n// App statuses\nexport const NOT_LOADED = \"NOT_LOADED\";\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\";\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\";\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\";\nexport const NOT_MOUNTED = \"NOT_MOUNTED\";\nexport const MOUNTING = \"MOUNTING\";\nexport const MOUNTED = \"MOUNTED\";\nexport const UPDATING = \"UPDATING\";\nexport const UNMOUNTING = \"UNMOUNTING\";\nexport const UNLOADING = \"UNLOADING\";\nexport const LOAD_ERROR = \"LOAD_ERROR\";\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\";\n\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\nexport function shouldBeActive(app) {\n  try {\n    return app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n    return false;\n  }\n}\n\nexport function toName(app) {\n  return app.name;\n}\n\nexport function isParcel(appOrParcel) {\n  return Boolean(appOrParcel.unmountThisParcel);\n}\n\nexport function objectType(appOrParcel) {\n  return isParcel(appOrParcel) ? \"parcel\" : \"application\";\n}\n", "// Object.assign() is not available in IE11. And the babel compiled output for object spread\n// syntax checks a bunch of Symbol stuff and is almost a kb. So this function is the smaller replacement.\nexport function assign() {\n  for (let i = arguments.length - 1; i > 0; i--) {\n    for (let key in arguments[i]) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      arguments[i - 1][key] = arguments[i][key];\n    }\n  }\n\n  return arguments[0];\n}\n", "/* the array.prototype.find polyfill on npmjs.com is ~20kb (not worth it)\n * and lodash is ~200kb (not worth it)\n */\n\nexport function find(arr, func) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n", "import { find } from \"../utils/find.js\";\nimport { objectType, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function validLifecycleFn(fn) {\n  return fn && (typeof fn === \"function\" || isArrayOfFns(fn));\n\n  function isArrayOfFns(arr) {\n    return (\n      Array.isArray(arr) && !find(arr, (item) => typeof item !== \"function\")\n    );\n  }\n}\n\nexport function flattenFnArray(appOrParcel, lifecycle) {\n  let fns = appOrParcel[lifecycle] || [];\n  fns = Array.isArray(fns) ? fns : [fns];\n  if (fns.length === 0) {\n    fns = [() => Promise.resolve()];\n  }\n\n  const type = objectType(appOrParcel);\n  const name = toName(appOrParcel);\n\n  return function (props) {\n    return fns.reduce((resultPromise, fn, index) => {\n      return resultPromise.then(() => {\n        const thisPromise = fn(props);\n        return smellsLikeAPromise(thisPromise)\n          ? thisPromise\n          : Promise.reject(\n              formatErrorMessage(\n                15,\n                __DEV__ &&\n                  `Within ${type} ${name}, the lifecycle function ${lifecycle} at array index ${index} did not return a promise`,\n                type,\n                name,\n                lifecycle,\n                index\n              )\n            );\n      });\n    }, Promise.resolve());\n  };\n}\n\nexport function smellsLikeAPromise(promise) {\n  return (\n    promise &&\n    typeof promise.then === \"function\" &&\n    typeof promise.catch === \"function\"\n  );\n}\n", "let profileEntries = [];\n\nexport function getProfilerData() {\n  return profileEntries;\n}\n\n/**\n *\n * @type {'application' | 'parcel' | 'routing'} ProfileType\n *\n * @param {ProfileType} type\n * @param {String} name\n * @param {number} start\n * @param {number} end\n */\nexport function addProfileEntry(\n  type,\n  name,\n  kind,\n  start,\n  end,\n  operationSucceeded\n) {\n  profileEntries.push({\n    type,\n    name,\n    start,\n    end,\n    kind,\n    operationSucceeded,\n  });\n}\n\nexport function clearProfilerData() {\n  profileEntries = [];\n}\n", "import {\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n  isParcel,\n} from \"../applications/app.helpers.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nexport function toBootstrapPromise(appOrParcel, hardFail) {\n  let startTime, profileEventType;\n\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_BOOTSTRAPPED) {\n      return appOrParcel;\n    }\n\n    if (__PROFILE__) {\n      profileEventType = isParcel(appOrParcel) ? \"parcel\" : \"application\";\n      startTime = performance.now();\n    }\n\n    appOrParcel.status = BOOTSTRAPPING;\n\n    if (!appOrParcel.bootstrap) {\n      // Default implementation of bootstrap\n      return Promise.resolve().then(successfulBootstrap);\n    }\n\n    return reasonableTime(appOrParcel, \"bootstrap\")\n      .then(successfulBootstrap)\n      .catch((err) => {\n        if (__PROFILE__) {\n          addProfileEntry(\n            profileEventType,\n            toName(appOrParcel),\n            \"bootstrap\",\n            startTime,\n            performance.now(),\n            false\n          );\n        }\n\n        if (hardFail) {\n          throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n        } else {\n          handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          return appOrParcel;\n        }\n      });\n  });\n\n  function successfulBootstrap() {\n    appOrParcel.status = NOT_MOUNTED;\n\n    if (__PROFILE__) {\n      addProfileEntry(\n        profileEventType,\n        toName(appOrParcel),\n        \"bootstrap\",\n        startTime,\n        performance.now(),\n        true\n      );\n    }\n\n    return appOrParcel;\n  }\n}\n", "import {\n  UNMOUNTING,\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n  isParcel,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nexport function toUnmountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== MOUNTED) {\n      return appOrParcel;\n    }\n\n    let startTime, profileEventType;\n\n    if (__PROFILE__) {\n      startTime = performance.now();\n      profileEventType = isParcel(appOrParcel) ? \"parcel\" : \"application\";\n    }\n\n    appOrParcel.status = UNMOUNTING;\n\n    const unmountChildrenParcels = Object.keys(appOrParcel.parcels).map(\n      (parcelId) => appOrParcel.parcels[parcelId].unmountThisParcel()\n    );\n\n    let parcelError;\n\n    return Promise.all(unmountChildrenParcels)\n      .then(unmountAppOrParcel, (parcelError) => {\n        // There is a parcel unmount error\n        return unmountAppOrParcel().then(() => {\n          // Unmounting the app/parcel succeeded, but unmounting its children parcels did not\n          const parentError = Error(parcelError.message);\n          if (hardFail) {\n            throw transformErr(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n      })\n      .then(() => appOrParcel);\n\n    function unmountAppOrParcel() {\n      // We always try to unmount the appOrParcel, even if the children parcels failed to unmount.\n      return reasonableTime(appOrParcel, \"unmount\").then(\n        () => {\n          // The appOrParcel needs to stay in a broken status if its children parcels fail to unmount\n          if (!parcelError) {\n            appOrParcel.status = NOT_MOUNTED;\n          }\n\n          if (__PROFILE__) {\n            addProfileEntry(\n              profileEventType,\n              toName(appOrParcel),\n              \"unmount\",\n              startTime,\n              performance.now(),\n              true\n            );\n          }\n        },\n        (err) => {\n          if (__PROFILE__) {\n            addProfileEntry(\n              profileEventType,\n              toName(appOrParcel),\n              \"unmount\",\n              startTime,\n              performance.now(),\n              false\n            );\n          }\n\n          if (hardFail) {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        }\n      );\n    }\n  });\n}\n", "import {\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  MOUNTING,\n  toName,\n  isParcel,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport CustomEvent from \"custom-event\";\nimport { toUnmountPromise } from \"./unmount.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nlet beforeFirstMountFired = false;\nlet firstMountFired = false;\n\nexport function toMountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_MOUNTED) {\n      return appOrParcel;\n    }\n\n    let startTime, profileEventType;\n\n    if (__PROFILE__) {\n      profileEventType = isParcel(appOrParcel) ? \"parcel\" : \"application\";\n      startTime = performance.now();\n    }\n\n    if (!beforeFirstMountFired) {\n      window.dispatchEvent(new CustomEvent(\"single-spa:before-first-mount\"));\n      beforeFirstMountFired = true;\n    }\n\n    appOrParcel.status = MOUNTING;\n\n    return reasonableTime(appOrParcel, \"mount\")\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (!firstMountFired) {\n          window.dispatchEvent(new CustomEvent(\"single-spa:first-mount\"));\n          firstMountFired = true;\n        }\n\n        if (__PROFILE__) {\n          addProfileEntry(\n            profileEventType,\n            toName(appOrParcel),\n            \"mount\",\n            startTime,\n            performance.now(),\n            true\n          );\n        }\n\n        return appOrParcel;\n      })\n      .catch((err) => {\n        // If we fail to mount the appOrParcel, we should attempt to unmount it before putting in SKIP_BECAUSE_BROKEN\n        // We temporarily put the appOrParcel into MOUNTED status so that toUnmountPromise actually attempts to unmount it\n        // instead of just doing a no-op.\n        appOrParcel.status = MOUNTED;\n        return toUnmountPromise(appOrParcel, true).then(\n          setSkipBecauseBroken,\n          setSkipBecauseBroken\n        );\n\n        function setSkipBecauseBroken() {\n          if (__PROFILE__) {\n            addProfileEntry(\n              profileEventType,\n              toName(appOrParcel),\n              \"mount\",\n              startTime,\n              performance.now(),\n              false\n            );\n          }\n\n          if (!hardFail) {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n            return appOrParcel;\n          } else {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        }\n      });\n  });\n}\n", "import {\n  UPDATING,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n  isParcel,\n} from \"../applications/app.helpers.js\";\nimport {\n  transformErr,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nexport function toUpdatePromise(appOrParcel) {\n  return Promise.resolve().then(() => {\n    let startTime, profileEventType;\n\n    if (__PROFILE__) {\n      profileEventType = isParcel(appOrParcel) ? \"parcel\" : \"application\";\n      startTime = performance.now();\n    }\n\n    if (appOrParcel.status !== MOUNTED) {\n      throw Error(\n        formatErrorMessage(\n          32,\n          __DEV__ &&\n            `Cannot update parcel '${toName(\n              appOrParcel\n            )}' because it is not mounted`,\n          toName(appOrParcel)\n        )\n      );\n    }\n\n    appOrParcel.status = UPDATING;\n\n    return reasonableTime(appOrParcel, \"update\")\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (__PROFILE__) {\n          addProfileEntry(\n            profileEventType,\n            toName(appOrParcel),\n            \"update\",\n            startTime,\n            performance.now(),\n            true\n          );\n        }\n\n        return appOrParcel;\n      })\n      .catch((err) => {\n        if (__PROFILE__) {\n          addProfileEntry(\n            profileEventType,\n            toName(appOrParcel),\n            \"update\",\n            startTime,\n            performance.now(),\n            false\n          );\n        }\n\n        throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n      });\n  });\n}\n", "import {\n  validLifecycleFn,\n  flattenFnArray,\n} from \"../lifecycles/lifecycle.helpers.js\";\nimport {\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUpdatePromise } from \"../lifecycles/update.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nlet parcelCount = 0;\nconst rootParcels = { parcels: {} };\n\n// This is a public api, exported to users of single-spa\nexport function mountRootParcel() {\n  return mountParcel.apply(rootParcels, arguments);\n}\n\nexport function mountParcel(config, customProps) {\n  const owningAppOrParcel = this;\n\n  // Validate inputs\n  if (!config || (typeof config !== \"object\" && typeof config !== \"function\")) {\n    throw Error(\n      formatErrorMessage(\n        2,\n        __DEV__ &&\n          \"Cannot mount parcel without a config object or config loading function\"\n      )\n    );\n  }\n\n  if (config.name && typeof config.name !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        3,\n        __DEV__ &&\n          `Parcel name must be a string, if provided. Was given ${typeof config.name}`,\n        typeof config.name\n      )\n    );\n  }\n\n  const id = parcelCount++;\n  let name = config.name || `parcel-${id}`;\n\n  if (typeof customProps !== \"object\") {\n    throw Error(\n      formatErrorMessage(\n        4,\n        __DEV__ &&\n          `Parcel ${name} has invalid customProps -- must be an object but was given ${typeof customProps}`,\n        name,\n        typeof customProps\n      )\n    );\n  }\n\n  if (!customProps.domElement) {\n    throw Error(\n      formatErrorMessage(\n        5,\n        __DEV__ &&\n          `Parcel ${name} cannot be mounted without a domElement provided as a prop`,\n        name\n      )\n    );\n  }\n\n  const passedConfigLoadingFunction = typeof config === \"function\";\n  const configLoadingFunction = passedConfigLoadingFunction\n    ? config\n    : () => Promise.resolve(config);\n\n  // Internal representation\n  const parcel = {\n    id,\n    parcels: {},\n    status: passedConfigLoadingFunction\n      ? LOADING_SOURCE_CODE\n      : NOT_BOOTSTRAPPED,\n    customProps,\n    parentName: toName(owningAppOrParcel),\n    unmountThisParcel() {\n      return mountPromise\n        .then(() => {\n          if (parcel.status !== MOUNTED) {\n            throw Error(\n              formatErrorMessage(\n                6,\n                __DEV__ &&\n                  `Cannot unmount parcel '${name}' -- it is in a ${parcel.status} status`,\n                name,\n                parcel.status\n              )\n            );\n          }\n          return toUnmountPromise(parcel, true);\n        })\n        .then((value) => {\n          if (parcel.parentName) {\n            delete owningAppOrParcel.parcels[parcel.id];\n          }\n\n          return value;\n        })\n        .then((value) => {\n          resolveUnmount(value);\n          return value;\n        })\n        .catch((err) => {\n          parcel.status = SKIP_BECAUSE_BROKEN;\n          rejectUnmount(err);\n          throw err;\n        });\n    },\n  };\n\n  // We return an external representation\n  let externalRepresentation;\n\n  // Add to owning app or parcel\n  owningAppOrParcel.parcels[id] = parcel;\n\n  let loadPromise = configLoadingFunction();\n\n  if (!loadPromise || typeof loadPromise.then !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        7,\n        __DEV__ &&\n          `When mounting a parcel, the config loading function must return a promise that resolves with the parcel config`\n      )\n    );\n  }\n\n  loadPromise = loadPromise.then((config) => {\n    if (!config) {\n      throw Error(\n        formatErrorMessage(\n          8,\n          __DEV__ &&\n            `When mounting a parcel, the config loading function returned a promise that did not resolve with a parcel config`\n        )\n      );\n    }\n\n    name = config.name || `parcel-${id}`;\n\n    if (\n      // ES Module objects don't have the object prototype\n      Object.prototype.hasOwnProperty.call(config, \"bootstrap\") &&\n      !validLifecycleFn(config.bootstrap)\n    ) {\n      throw Error(\n        formatErrorMessage(\n          9,\n          __DEV__ && `Parcel ${name} provided an invalid bootstrap function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.mount)) {\n      throw Error(\n        formatErrorMessage(\n          10,\n          __DEV__ && `Parcel ${name} must have a valid mount function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.unmount)) {\n      throw Error(\n        formatErrorMessage(\n          11,\n          __DEV__ && `Parcel ${name} must have a valid unmount function`,\n          name\n        )\n      );\n    }\n\n    if (config.update && !validLifecycleFn(config.update)) {\n      throw Error(\n        formatErrorMessage(\n          12,\n          __DEV__ && `Parcel ${name} provided an invalid update function`,\n          name\n        )\n      );\n    }\n\n    const bootstrap = flattenFnArray(config, \"bootstrap\");\n    const mount = flattenFnArray(config, \"mount\");\n    const unmount = flattenFnArray(config, \"unmount\");\n\n    parcel.status = NOT_BOOTSTRAPPED;\n    parcel.name = name;\n    parcel.bootstrap = bootstrap;\n    parcel.mount = mount;\n    parcel.unmount = unmount;\n    parcel.timeouts = ensureValidAppTimeouts(config.timeouts);\n\n    if (config.update) {\n      parcel.update = flattenFnArray(config, \"update\");\n      externalRepresentation.update = function (customProps) {\n        parcel.customProps = customProps;\n\n        return promiseWithoutReturnValue(toUpdatePromise(parcel));\n      };\n    }\n  });\n\n  // Start bootstrapping and mounting\n  // The .then() causes the work to be put on the event loop instead of happening immediately\n  const bootstrapPromise = loadPromise.then(() =>\n    toBootstrapPromise(parcel, true)\n  );\n  const mountPromise = bootstrapPromise.then(() =>\n    toMountPromise(parcel, true)\n  );\n\n  let resolveUnmount, rejectUnmount;\n\n  const unmountPromise = new Promise((resolve, reject) => {\n    resolveUnmount = resolve;\n    rejectUnmount = reject;\n  });\n\n  externalRepresentation = {\n    mount() {\n      return promiseWithoutReturnValue(\n        Promise.resolve().then(() => {\n          if (parcel.status !== NOT_MOUNTED) {\n            throw Error(\n              formatErrorMessage(\n                13,\n                __DEV__ &&\n                  `Cannot mount parcel '${name}' -- it is in a ${parcel.status} status`,\n                name,\n                parcel.status\n              )\n            );\n          }\n\n          // Add to owning app or parcel\n          owningAppOrParcel.parcels[id] = parcel;\n\n          return toMountPromise(parcel);\n        })\n      );\n    },\n    unmount() {\n      return promiseWithoutReturnValue(parcel.unmountThisParcel());\n    },\n    getStatus() {\n      return parcel.status;\n    },\n    loadPromise: promiseWithoutReturnValue(loadPromise),\n    bootstrapPromise: promiseWithoutReturnValue(bootstrapPromise),\n    mountPromise: promiseWithoutReturnValue(mountPromise),\n    unmountPromise: promiseWithoutReturnValue(unmountPromise),\n  };\n\n  return externalRepresentation;\n}\n\nfunction promiseWithoutReturnValue(promise) {\n  return promise.then(() => null);\n}\n", "import * as singleSpa from \"../single-spa.js\";\nimport { mountParcel } from \"../parcels/mount-parcel.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { isParcel, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function getProps(appOrParcel) {\n  const name = toName(appOrParcel);\n  let customProps =\n    typeof appOrParcel.customProps === \"function\"\n      ? appOrParcel.customProps(name, window.location)\n      : appOrParcel.customProps;\n  if (\n    typeof customProps !== \"object\" ||\n    customProps === null ||\n    Array.isArray(customProps)\n  ) {\n    customProps = {};\n    console.warn(\n      formatErrorMessage(\n        40,\n        __DEV__ &&\n          `single-spa: ${name}'s customProps function must return an object. Received ${customProps}`\n      ),\n      name,\n      customProps\n    );\n  }\n  const result = assign({}, customProps, {\n    name,\n    mountParcel: mountParcel.bind(appOrParcel),\n    singleSpa,\n  });\n\n  if (isParcel(appOrParcel)) {\n    result.unmountSelf = appOrParcel.unmountThisParcel;\n  }\n\n  return result;\n}\n", "import { assign } from \"../utils/assign\";\nimport { getProps } from \"../lifecycles/prop.helpers\";\nimport { objectType, toName } from \"./app.helpers\";\nimport { formatErrorMessage } from \"./app-errors\";\n\nconst defaultWarningMillis = 1000;\n\nconst globalTimeoutConfig = {\n  bootstrap: {\n    millis: 4000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  mount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unmount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unload: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  update: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n};\n\nexport function setBootstrapMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        16,\n        __DEV__ &&\n          `bootstrap max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.bootstrap = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setMountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        17,\n        __DEV__ &&\n          `mount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.mount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnmountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        18,\n        __DEV__ &&\n          `unmount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unmount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnloadMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        19,\n        __DEV__ &&\n          `unload max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unload = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function reasonableTime(appOrParcel, lifecycle) {\n  const timeoutConfig = appOrParcel.timeouts[lifecycle];\n  const warningPeriod = timeoutConfig.warningMillis;\n  const type = objectType(appOrParcel);\n\n  return new Promise((resolve, reject) => {\n    let finished = false;\n    let errored = false;\n\n    appOrParcel[lifecycle](getProps(appOrParcel))\n      .then((val) => {\n        finished = true;\n        resolve(val);\n      })\n      .catch((val) => {\n        finished = true;\n        reject(val);\n      });\n\n    setTimeout(() => maybeTimingOut(1), warningPeriod);\n    setTimeout(() => maybeTimingOut(true), timeoutConfig.millis);\n\n    const errMsg = formatErrorMessage(\n      31,\n      __DEV__ &&\n        `Lifecycle function ${lifecycle} for ${type} ${toName(\n          appOrParcel\n        )} lifecycle did not resolve or reject for ${timeoutConfig.millis} ms.`,\n      lifecycle,\n      type,\n      toName(appOrParcel),\n      timeoutConfig.millis\n    );\n\n    function maybeTimingOut(shouldError) {\n      if (!finished) {\n        if (shouldError === true) {\n          errored = true;\n          if (timeoutConfig.dieOnTimeout) {\n            reject(Error(errMsg));\n          } else {\n            console.error(errMsg);\n            //don't resolve or reject, we're waiting this one out\n          }\n        } else if (!errored) {\n          const numWarnings = shouldError;\n          const numMillis = numWarnings * warningPeriod;\n          console.warn(errMsg);\n          if (numMillis + warningPeriod < timeoutConfig.millis) {\n            setTimeout(() => maybeTimingOut(numWarnings + 1), warningPeriod);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function ensureValidAppTimeouts(timeouts) {\n  const result = {};\n\n  for (let key in globalTimeoutConfig) {\n    result[key] = assign(\n      {},\n      globalTimeoutConfig[key],\n      (timeouts && timeouts[key]) || {}\n    );\n  }\n\n  return result;\n}\n", "import {\n  LOAD_ERROR,\n  NOT_BOOTSTRAPPED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  NOT_LOADED,\n  objectType,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport {\n  handleAppError,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport {\n  flattenFnArray,\n  smellsLikeAPromise,\n  validLifecycleFn,\n} from \"./lifecycle.helpers.js\";\nimport { getProps } from \"./prop.helpers.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nexport function toLoadPromise(appOrParcel) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.loadPromise) {\n      return appOrParcel.loadPromise;\n    }\n\n    if (\n      appOrParcel.status !== NOT_LOADED &&\n      appOrParcel.status !== LOAD_ERROR\n    ) {\n      return appOrParcel;\n    }\n\n    let startTime;\n\n    if (__PROFILE__) {\n      startTime = performance.now();\n    }\n\n    appOrParcel.status = LOADING_SOURCE_CODE;\n\n    let appOpts, isUserErr;\n\n    return (appOrParcel.loadPromise = Promise.resolve()\n      .then(() => {\n        const loadPromise = appOrParcel.loadApp(getProps(appOrParcel));\n        if (!smellsLikeAPromise(loadPromise)) {\n          // The name of the app will be prepended to this error message inside of the handleAppError function\n          isUserErr = true;\n          throw Error(\n            formatErrorMessage(\n              33,\n              __DEV__ &&\n                `single-spa loading function did not return a promise. Check the second argument to registerApplication('${toName(\n                  appOrParcel\n                )}', loadingFunction, activityFunction)`,\n              toName(appOrParcel)\n            )\n          );\n        }\n        return loadPromise.then((val) => {\n          appOrParcel.loadErrorTime = null;\n\n          appOpts = val;\n\n          let validationErrMessage, validationErrCode;\n\n          if (typeof appOpts !== \"object\") {\n            validationErrCode = 34;\n            if (__DEV__) {\n              validationErrMessage = `does not export anything`;\n            }\n          }\n\n          if (\n            // ES Modules don't have the Object prototype\n            Object.prototype.hasOwnProperty.call(appOpts, \"bootstrap\") &&\n            !validLifecycleFn(appOpts.bootstrap)\n          ) {\n            validationErrCode = 35;\n            if (__DEV__) {\n              validationErrMessage = `does not export a valid bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.mount)) {\n            validationErrCode = 36;\n            if (__DEV__) {\n              validationErrMessage = `does not export a mount function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.unmount)) {\n            validationErrCode = 37;\n            if (__DEV__) {\n              validationErrMessage = `does not export a unmount function or array of functions`;\n            }\n          }\n\n          const type = objectType(appOpts);\n\n          if (validationErrCode) {\n            let appOptsStr;\n            try {\n              appOptsStr = JSON.stringify(appOpts);\n            } catch {}\n            console.error(\n              formatErrorMessage(\n                validationErrCode,\n                __DEV__ &&\n                  `The loading function for single-spa ${type} '${toName(\n                    appOrParcel\n                  )}' resolved with the following, which does not have bootstrap, mount, and unmount functions`,\n                type,\n                toName(appOrParcel),\n                appOptsStr\n              ),\n              appOpts\n            );\n            handleAppError(\n              validationErrMessage,\n              appOrParcel,\n              SKIP_BECAUSE_BROKEN\n            );\n            return appOrParcel;\n          }\n\n          if (appOpts.devtools && appOpts.devtools.overlays) {\n            appOrParcel.devtools.overlays = assign(\n              {},\n              appOrParcel.devtools.overlays,\n              appOpts.devtools.overlays\n            );\n          }\n\n          appOrParcel.status = NOT_BOOTSTRAPPED;\n          appOrParcel.bootstrap = flattenFnArray(appOpts, \"bootstrap\");\n          appOrParcel.mount = flattenFnArray(appOpts, \"mount\");\n          appOrParcel.unmount = flattenFnArray(appOpts, \"unmount\");\n          appOrParcel.unload = flattenFnArray(appOpts, \"unload\");\n          appOrParcel.timeouts = ensureValidAppTimeouts(appOpts.timeouts);\n\n          delete appOrParcel.loadPromise;\n\n          if (__PROFILE__) {\n            addProfileEntry(\n              \"application\",\n              toName(appOrParcel),\n              \"load\",\n              startTime,\n              performance.now(),\n              true\n            );\n          }\n\n          return appOrParcel;\n        });\n      })\n      .catch((err) => {\n        delete appOrParcel.loadPromise;\n\n        let newStatus;\n        if (isUserErr) {\n          newStatus = SKIP_BECAUSE_BROKEN;\n        } else {\n          newStatus = LOAD_ERROR;\n          appOrParcel.loadErrorTime = new Date().getTime();\n        }\n        handleAppError(err, appOrParcel, newStatus);\n\n        if (__PROFILE__) {\n          addProfileEntry(\n            \"application\",\n            toName(appOrParcel),\n            \"load\",\n            startTime,\n            performance.now(),\n            false\n          );\n        }\n\n        return appOrParcel;\n      }));\n  });\n}\n", "export const isInBrowser = typeof window !== \"undefined\";\n", "import { reroute } from \"./reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\n\n/* We capture navigation event listeners so that we can make sure\n * that application navigation listeners are not called until\n * single-spa has ensured that the correct applications are\n * unmounted and mounted.\n */\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [],\n};\n\nexport const routingEventsListeningTo = [\"hashchange\", \"popstate\"];\n\nexport function navigateToUrl(obj) {\n  let url;\n  if (typeof obj === \"string\") {\n    url = obj;\n  } else if (this && this.href) {\n    url = this.href;\n  } else if (\n    obj &&\n    obj.currentTarget &&\n    obj.currentTarget.href &&\n    obj.preventDefault\n  ) {\n    url = obj.currentTarget.href;\n    obj.preventDefault();\n  } else {\n    throw Error(\n      formatErrorMessage(\n        14,\n        __DEV__ &&\n          `singleSpaNavigate/navigateToUrl must be either called with a string url, with an <a> tag as its context, or with an event whose currentTarget is an <a> tag`\n      )\n    );\n  }\n\n  const current = parseUri(window.location.href);\n  const destination = parseUri(url);\n\n  if (url.indexOf(\"#\") === 0) {\n    window.location.hash = destination.hash;\n  } else if (current.host !== destination.host && destination.host) {\n    if (process.env.BABEL_ENV === \"test\") {\n      return { wouldHaveReloadedThePage: true };\n    } else {\n      window.location.href = url;\n    }\n  } else if (\n    destination.pathname === current.pathname &&\n    destination.search === current.search\n  ) {\n    window.location.hash = destination.hash;\n  } else {\n    // different path, host, or query params\n    window.history.pushState(null, null, url);\n  }\n}\n\nexport function callCapturedEventListeners(eventArguments) {\n  if (eventArguments) {\n    const eventType = eventArguments[0].type;\n    if (routingEventsListeningTo.indexOf(eventType) >= 0) {\n      capturedEventListeners[eventType].forEach((listener) => {\n        try {\n          // The error thrown by application event listener should not break single-spa down.\n          // Just like https://github.com/single-spa/single-spa/blob/85f5042dff960e40936f3a5069d56fc9477fac04/src/navigation/reroute.js#L140-L146 did\n          listener.apply(this, eventArguments);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          });\n        }\n      });\n    }\n  }\n}\n\nlet urlRerouteOnly;\n\nfunction urlReroute() {\n  reroute([], arguments);\n}\n\nfunction patchedUpdateState(updateState, methodName) {\n  return function () {\n    const urlBefore = window.location.href;\n    const result = updateState.apply(this, arguments);\n    const urlAfter = window.location.href;\n\n    if (!urlRerouteOnly || urlBefore !== urlAfter) {\n      // fire an artificial popstate event so that\n      // single-spa applications know about routing that\n      // occurs in a different application\n      window.dispatchEvent(\n        createPopStateEvent(window.history.state, methodName)\n      );\n    }\n\n    return result;\n  };\n}\n\nfunction createPopStateEvent(state, originalMethodName) {\n  // https://github.com/single-spa/single-spa/issues/224 and https://github.com/single-spa/single-spa-angular/issues/49\n  // We need a popstate event even though the browser doesn't do one by default when you call replaceState, so that\n  // all the applications can reroute. We explicitly identify this extraneous event by setting singleSpa=true and\n  // singleSpaTrigger=<pushState|replaceState> on the event instance.\n  let evt;\n  try {\n    evt = new PopStateEvent(\"popstate\", { state });\n  } catch (err) {\n    // IE 11 compatibility https://github.com/single-spa/single-spa/issues/299\n    // https://docs.microsoft.com/en-us/openspecs/ie_standards/ms-html5e/bd560f47-b349-4d2c-baa8-f1560fb489dd\n    evt = document.createEvent(\"PopStateEvent\");\n    evt.initPopStateEvent(\"popstate\", false, false, state);\n  }\n  evt.singleSpa = true;\n  evt.singleSpaTrigger = originalMethodName;\n  return evt;\n}\n\nexport let originalReplaceState = null;\n\nlet historyApiIsPatched = false;\n\n// We patch the history API so single-spa is notified of all calls to pushState/replaceState.\n// We patch addEventListener/removeEventListener so we can capture all popstate/hashchange event listeners,\n// and delay calling them until single-spa has finished mounting/unmounting applications\nexport function patchHistoryApi(opts) {\n  if (historyApiIsPatched) {\n    throw Error(\n      formatErrorMessage(\n        43,\n        __DEV__ &&\n          `single-spa: patchHistoryApi() was called after the history api was already patched.`\n      )\n    );\n  }\n\n  // True by default, as a performance optimization that reduces\n  // the number of extraneous popstate events\n  urlRerouteOnly =\n    opts && opts.hasOwnProperty(\"urlRerouteOnly\") ? opts.urlRerouteOnly : true;\n\n  historyApiIsPatched = true;\n\n  originalReplaceState = window.history.replaceState;\n\n  // We will trigger an app change for any routing events.\n  window.addEventListener(\"hashchange\", urlReroute);\n  window.addEventListener(\"popstate\", urlReroute);\n\n  // Monkeypatch addEventListener so that we can ensure correct timing\n  const originalAddEventListener = window.addEventListener;\n  const originalRemoveEventListener = window.removeEventListener;\n  window.addEventListener = function (eventName, fn) {\n    if (typeof fn === \"function\") {\n      if (\n        routingEventsListeningTo.indexOf(eventName) >= 0 &&\n        !find(capturedEventListeners[eventName], (listener) => listener === fn)\n      ) {\n        capturedEventListeners[eventName].push(fn);\n        return;\n      }\n    }\n\n    return originalAddEventListener.apply(this, arguments);\n  };\n\n  window.removeEventListener = function (eventName, listenerFn) {\n    if (typeof listenerFn === \"function\") {\n      if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n        capturedEventListeners[eventName] = capturedEventListeners[\n          eventName\n        ].filter((fn) => fn !== listenerFn);\n      }\n    }\n\n    return originalRemoveEventListener.apply(this, arguments);\n  };\n\n  window.history.pushState = patchedUpdateState(\n    window.history.pushState,\n    \"pushState\"\n  );\n  window.history.replaceState = patchedUpdateState(\n    originalReplaceState,\n    \"replaceState\"\n  );\n}\n\n// Detect if single-spa has already been loaded on the page.\n// If so, warn because this can result in lots of problems, including\n// lots of extraneous popstate events and unexpected results for\n// apis like getAppNames().\nif (isInBrowser) {\n  if (window.singleSpaNavigate) {\n    console.warn(\n      formatErrorMessage(\n        41,\n        __DEV__ &&\n          \"single-spa has been loaded twice on the page. This can result in unexpected behavior.\"\n      )\n    );\n  } else {\n    /* For convenience in `onclick` attributes, we expose a global function for navigating to\n     * whatever an <a> tag's href is.\n     */\n    window.singleSpaNavigate = navigateToUrl;\n  }\n}\n\nfunction parseUri(str) {\n  const anchor = document.createElement(\"a\");\n  anchor.href = str;\n  return anchor;\n}\n", "import { routingEventsListeningTo } from \"./navigation/navigation-events.js\";\n\nlet hasInitialized = false;\n\nexport function ensureJQuerySupport(jQuery = window.jQuery) {\n  if (!jQuery) {\n    if (window.$ && window.$.fn && window.$.fn.jquery) {\n      jQuery = window.$;\n    }\n  }\n\n  if (jQuery && !hasInitialized) {\n    const originalJQueryOn = jQuery.fn.on;\n    const originalJQueryOff = jQuery.fn.off;\n\n    jQuery.fn.on = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOn,\n        window.addEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    jQuery.fn.off = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOff,\n        window.removeEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    hasInitialized = true;\n  }\n}\n\nfunction captureRoutingEvents(\n  originalJQueryFunction,\n  nativeFunctionToCall,\n  eventString,\n  fn,\n  originalArgs\n) {\n  if (typeof eventString !== \"string\") {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n\n  const eventNames = eventString.split(/\\s+/);\n  eventNames.forEach((eventName) => {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      nativeFunctionToCall(eventName, fn);\n      eventString = eventString.replace(eventName, \"\");\n    }\n  });\n\n  if (eventString.trim() === \"\") {\n    return this;\n  } else {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n}\n", "import {\n  NOT_MOUNTED,\n  UNLOADING,\n  NOT_LOADED,\n  LOAD_ERROR,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nconst appsToUnload = {};\n\nexport function toUnloadPromise(appOrParcel) {\n  return Promise.resolve().then(() => {\n    const unloadInfo = appsToUnload[toName(appOrParcel)];\n\n    if (!unloadInfo) {\n      /* No one has called unloadApplication for this app,\n       */\n      return appOrParcel;\n    }\n\n    if (appOrParcel.status === NOT_LOADED) {\n      /* This app is already unloaded. We just need to clean up\n       * anything that still thinks we need to unload the app.\n       */\n      finishUnloadingApp(appOrParcel, unloadInfo);\n      return appOrParcel;\n    }\n\n    if (appOrParcel.status === UNLOADING) {\n      /* Both unloadApplication and reroute want to unload this app.\n       * It only needs to be done once, though.\n       */\n      return unloadInfo.promise.then(() => appOrParcel);\n    }\n\n    if (\n      appOrParcel.status !== NOT_MOUNTED &&\n      appOrParcel.status !== LOAD_ERROR\n    ) {\n      /* The app cannot be unloaded until it is unmounted.\n       */\n      return appOrParcel;\n    }\n\n    let startTime;\n\n    if (__PROFILE__) {\n      startTime = performance.now();\n    }\n\n    const unloadPromise =\n      appOrParcel.status === LOAD_ERROR\n        ? Promise.resolve()\n        : reasonableTime(appOrParcel, \"unload\");\n\n    appOrParcel.status = UNLOADING;\n\n    return unloadPromise\n      .then(() => {\n        if (__PROFILE__) {\n          addProfileEntry(\n            \"application\",\n            toName(appOrParcel),\n            \"unload\",\n            startTime,\n            performance.now(),\n            true\n          );\n        }\n\n        finishUnloadingApp(appOrParcel, unloadInfo);\n\n        return appOrParcel;\n      })\n      .catch((err) => {\n        if (__PROFILE__) {\n          addProfileEntry(\n            \"application\",\n            toName(appOrParcel),\n            \"unload\",\n            startTime,\n            performance.now(),\n            false\n          );\n        }\n\n        errorUnloadingApp(appOrParcel, unloadInfo, err);\n\n        return appOrParcel;\n      });\n  });\n}\n\nfunction finishUnloadingApp(app, unloadInfo) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  app.status = NOT_LOADED;\n\n  /* resolve the promise of whoever called unloadApplication.\n   * This should be done after all other cleanup/bookkeeping\n   */\n  unloadInfo.resolve();\n}\n\nfunction errorUnloadingApp(app, unloadInfo, err) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  unloadInfo.reject(err);\n}\n\nexport function addAppToUnload(app, promiseGetter, resolve, reject) {\n  appsToUnload[toName(app)] = { app, resolve, reject };\n  Object.defineProperty(appsToUnload[toName(app)], \"promise\", {\n    get: promiseGetter,\n  });\n}\n\nexport function getAppUnloadInfo(appName) {\n  return appsToUnload[appName];\n}\n", "import { ensureJQuerySupport } from \"../jquery-support.js\";\nimport {\n  isActive,\n  toName,\n  NOT_LOADED,\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOAD_ERROR,\n  SKIP_BECAUSE_BROKEN,\n  LOADING_SOURCE_CODE,\n  shouldBeActive,\n} from \"./app.helpers.js\";\nimport { reroute, triggerAppChange } from \"../navigation/reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  toUnloadPromise,\n  getAppUnloadInfo,\n  addAppToUnload,\n} from \"../lifecycles/unload.js\";\nimport { formatErrorMessage } from \"./app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\nimport { assign } from \"../utils/assign\";\nimport { isStarted } from \"../start.js\";\n\nconst apps = [];\n\nexport function getAppChanges() {\n  const appsToUnload = [],\n    appsToUnmount = [],\n    appsToLoad = [],\n    appsToMount = [];\n\n  // We re-attempt to download applications in LOAD_ERROR after a timeout of 200 milliseconds\n  const currentTime = new Date().getTime();\n\n  apps.forEach((app) => {\n    const appShouldBeActive =\n      app.status !== SKIP_BECAUSE_BROKEN && shouldBeActive(app);\n\n    switch (app.status) {\n      case LOAD_ERROR:\n        if (appShouldBeActive && currentTime - app.loadErrorTime >= 200) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case NOT_MOUNTED:\n        if (!appShouldBeActive && getAppUnloadInfo(toName(app))) {\n          appsToUnload.push(app);\n        } else if (appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n        break;\n      // all other statuses are ignored\n    }\n  });\n\n  return { appsToUnload, appsToUnmount, appsToLoad, appsToMount };\n}\n\nexport function getMountedApps() {\n  return apps.filter(isActive).map(toName);\n}\n\nexport function getAppNames() {\n  return apps.map(toName);\n}\n\n// used in devtools, not (currently) exposed as a single-spa API\nexport function getRawAppData() {\n  return [...apps];\n}\n\nexport function getAppStatus(appName) {\n  const app = find(apps, (app) => toName(app) === appName);\n  return app ? app.status : null;\n}\n\nlet startWarningInitialized = false;\n\nexport function registerApplication(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const registration = sanitizeArguments(\n    appNameOrConfig,\n    appOrLoadApp,\n    activeWhen,\n    customProps\n  );\n\n  if (!isStarted() && !startWarningInitialized) {\n    startWarningInitialized = true;\n\n    setTimeout(() => {\n      if (!isStarted()) {\n        console.warn(\n          formatErrorMessage(\n            1,\n            __DEV__ &&\n              `singleSpa.start() has not been called, 5000ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted.`\n          )\n        );\n      }\n    }, 5000);\n  }\n\n  if (getAppNames().indexOf(registration.name) !== -1)\n    throw Error(\n      formatErrorMessage(\n        21,\n        __DEV__ &&\n          `There is already an app registered with name ${registration.name}`,\n        registration.name\n      )\n    );\n\n  apps.push(\n    assign(\n      {\n        loadErrorTime: null,\n        status: NOT_LOADED,\n        parcels: {},\n        devtools: {\n          overlays: {\n            options: {},\n            selectors: [],\n          },\n        },\n      },\n      registration\n    )\n  );\n\n  if (isInBrowser) {\n    ensureJQuerySupport();\n    reroute();\n  }\n}\n\nexport function checkActivityFunctions(location = window.location) {\n  return apps.filter((app) => app.activeWhen(location)).map(toName);\n}\n\nexport function unregisterApplication(appName) {\n  if (apps.filter((app) => toName(app) === appName).length === 0) {\n    throw Error(\n      formatErrorMessage(\n        25,\n        __DEV__ &&\n          `Cannot unregister application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  const unloadPromise = isInBrowser\n    ? // See https://github.com/single-spa/single-spa/issues/871 for why waitForUnmount is false\n      unloadApplication(appName, { waitForUnmount: false })\n    : Promise.resolve();\n\n  return unloadPromise.then(() => {\n    const appIndex = apps.map(toName).indexOf(appName);\n    apps.splice(appIndex, 1);\n  });\n}\n\nexport function unloadApplication(appName, opts = { waitForUnmount: false }) {\n  if (typeof appName !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        26,\n        __DEV__ && `unloadApplication requires a string 'appName'`\n      )\n    );\n  }\n  const app = find(apps, (App) => toName(App) === appName);\n  if (!app) {\n    throw Error(\n      formatErrorMessage(\n        27,\n        __DEV__ &&\n          `Could not unload application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  const appUnloadInfo = getAppUnloadInfo(toName(app));\n  if (opts && opts.waitForUnmount) {\n    // We need to wait for unmount before unloading the app\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this, too\n      return appUnloadInfo.promise;\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      const promise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => promise, resolve, reject);\n      });\n      return promise;\n    }\n  } else {\n    /* We should unmount the app, unload it, and remount it immediately.\n     */\n\n    let resultPromise;\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this app to unload\n      resultPromise = appUnloadInfo.promise;\n      immediatelyUnloadApp(app, appUnloadInfo.resolve, appUnloadInfo.reject);\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      resultPromise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => resultPromise, resolve, reject);\n        immediatelyUnloadApp(app, resolve, reject);\n      });\n    }\n\n    return resultPromise;\n  }\n}\n\nfunction immediatelyUnloadApp(app, resolve, reject) {\n  Promise.resolve()\n    .then(() => {\n      // Before unmounting the application, we first must wait for it to finish mounting\n      // Otherwise, the test for issue 871 in unregister-application.spec.js fails because\n      // the application isn't really unmounted.\n      if (\n        find(checkActivityFunctions(), (activeApp) => activeApp === toName(app))\n      ) {\n        return triggerAppChange();\n      }\n    })\n    .then(() => {\n      return toUnmountPromise(app)\n        .then(toUnloadPromise)\n        .then(() => {\n          resolve();\n          setTimeout(() => {\n            // reroute, but the unload promise is done\n            reroute();\n          });\n        });\n    })\n    .catch(reject);\n}\n\nfunction validateRegisterWithArguments(\n  name,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  if (typeof name !== \"string\" || name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          `The 1st argument to registerApplication must be a non-empty string 'appName'`\n      )\n    );\n\n  if (!appOrLoadApp)\n    throw Error(\n      formatErrorMessage(\n        23,\n        __DEV__ &&\n          \"The 2nd argument to registerApplication must be an application or loading application function\"\n      )\n    );\n\n  if (typeof activeWhen !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The 3rd argument to registerApplication must be an activeWhen function\"\n      )\n    );\n\n  if (!validCustomProps(customProps))\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ &&\n          \"The optional 4th argument is a customProps and must be an object\"\n      )\n    );\n}\n\nexport function validateRegisterWithConfig(config) {\n  if (Array.isArray(config) || config === null)\n    throw Error(\n      formatErrorMessage(\n        39,\n        __DEV__ && \"Configuration object can't be an Array or null!\"\n      )\n    );\n  const validKeys = [\"name\", \"app\", \"activeWhen\", \"customProps\"];\n  const invalidKeys = Object.keys(config).reduce(\n    (invalidKeys, prop) =>\n      validKeys.indexOf(prop) >= 0 ? invalidKeys : invalidKeys.concat(prop),\n    []\n  );\n  if (invalidKeys.length !== 0)\n    throw Error(\n      formatErrorMessage(\n        38,\n        __DEV__ &&\n          `The configuration object accepts only: ${validKeys.join(\n            \", \"\n          )}. Invalid keys: ${invalidKeys.join(\", \")}.`,\n        validKeys.join(\", \"),\n        invalidKeys.join(\", \")\n      )\n    );\n  if (typeof config.name !== \"string\" || config.name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.name on registerApplication must be a non-empty string\"\n      )\n    );\n  if (typeof config.app !== \"object\" && typeof config.app !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.app on registerApplication must be an application or a loading function\"\n      )\n    );\n  const allowsStringAndFunction = (activeWhen) =>\n    typeof activeWhen === \"string\" || typeof activeWhen === \"function\";\n  if (\n    !allowsStringAndFunction(config.activeWhen) &&\n    !(\n      Array.isArray(config.activeWhen) &&\n      config.activeWhen.every(allowsStringAndFunction)\n    )\n  )\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The config.activeWhen on registerApplication must be a string, function or an array with both\"\n      )\n    );\n  if (!validCustomProps(config.customProps))\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ && \"The optional config.customProps must be an object\"\n      )\n    );\n}\n\nfunction validCustomProps(customProps) {\n  return (\n    !customProps ||\n    typeof customProps === \"function\" ||\n    (typeof customProps === \"object\" &&\n      customProps !== null &&\n      !Array.isArray(customProps))\n  );\n}\n\nfunction sanitizeArguments(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const usingObjectAPI = typeof appNameOrConfig === \"object\";\n\n  const registration = {\n    name: null,\n    loadApp: null,\n    activeWhen: null,\n    customProps: null,\n  };\n\n  if (usingObjectAPI) {\n    validateRegisterWithConfig(appNameOrConfig);\n    registration.name = appNameOrConfig.name;\n    registration.loadApp = appNameOrConfig.app;\n    registration.activeWhen = appNameOrConfig.activeWhen;\n    registration.customProps = appNameOrConfig.customProps;\n  } else {\n    validateRegisterWithArguments(\n      appNameOrConfig,\n      appOrLoadApp,\n      activeWhen,\n      customProps\n    );\n    registration.name = appNameOrConfig;\n    registration.loadApp = appOrLoadApp;\n    registration.activeWhen = activeWhen;\n    registration.customProps = customProps;\n  }\n\n  registration.loadApp = sanitizeLoadApp(registration.loadApp);\n  registration.customProps = sanitizeCustomProps(registration.customProps);\n  registration.activeWhen = sanitizeActiveWhen(registration.activeWhen);\n\n  return registration;\n}\n\nfunction sanitizeLoadApp(loadApp) {\n  if (typeof loadApp !== \"function\") {\n    return () => Promise.resolve(loadApp);\n  }\n\n  return loadApp;\n}\n\nfunction sanitizeCustomProps(customProps) {\n  return customProps ? customProps : {};\n}\n\nfunction sanitizeActiveWhen(activeWhen) {\n  let activeWhenArray = Array.isArray(activeWhen) ? activeWhen : [activeWhen];\n  activeWhenArray = activeWhenArray.map((activeWhenOrPath) =>\n    typeof activeWhenOrPath === \"function\"\n      ? activeWhenOrPath\n      : pathToActiveWhen(activeWhenOrPath)\n  );\n\n  return (location) =>\n    activeWhenArray.some((activeWhen) => activeWhen(location));\n}\n\nexport function pathToActiveWhen(path, exactMatch) {\n  const regex = toDynamicPathValidatorRegex(path, exactMatch);\n\n  return (location) => {\n    // compatible with IE10\n    let origin = location.origin;\n    if (!origin) {\n      origin = `${location.protocol}//${location.host}`;\n    }\n    const route = location.href\n      .replace(origin, \"\")\n      .replace(location.search, \"\")\n      .split(\"?\")[0];\n    return regex.test(route);\n  };\n}\n\nfunction toDynamicPathValidatorRegex(path, exactMatch) {\n  let lastIndex = 0,\n    inDynamic = false,\n    regexStr = \"^\";\n\n  if (path[0] !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  for (let charIndex = 0; charIndex < path.length; charIndex++) {\n    const char = path[charIndex];\n    const startOfDynamic = !inDynamic && char === \":\";\n    const endOfDynamic = inDynamic && char === \"/\";\n    if (startOfDynamic || endOfDynamic) {\n      appendToRegex(charIndex);\n    }\n  }\n\n  appendToRegex(path.length);\n  return new RegExp(regexStr, \"i\");\n\n  function appendToRegex(index) {\n    const anyCharMaybeTrailingSlashRegex = \"[^/]+/?\";\n    const commonStringSubPath = escapeStrRegex(path.slice(lastIndex, index));\n\n    regexStr += inDynamic\n      ? anyCharMaybeTrailingSlashRegex\n      : commonStringSubPath;\n\n    if (index === path.length) {\n      if (inDynamic) {\n        if (exactMatch) {\n          // Ensure exact match paths that end in a dynamic portion don't match\n          // urls with characters after a slash after the dynamic portion.\n          regexStr += \"$\";\n        }\n      } else {\n        // For exact matches, expect no more characters. Otherwise, allow\n        // any characters.\n        const suffix = exactMatch ? \"\" : \".*\";\n\n        regexStr =\n          // use charAt instead as we could not use es6 method endsWith\n          regexStr.charAt(regexStr.length - 1) === \"/\"\n            ? `${regexStr}${suffix}$`\n            : `${regexStr}(/${suffix})?(#.*)?$`;\n      }\n    }\n\n    inDynamic = !inDynamic;\n    lastIndex = index;\n  }\n\n  function escapeStrRegex(str) {\n    // borrowed from https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\n    return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n  }\n}\n", "import CustomEvent from \"custom-event\";\nimport { isStarted } from \"../start.js\";\nimport { toLoadPromise } from \"../lifecycles/load.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  getAppStatus,\n  getAppChanges,\n  getMountedApps,\n} from \"../applications/apps.js\";\nimport {\n  callCapturedEventListeners,\n  originalReplaceState,\n} from \"./navigation-events.js\";\nimport { toUnloadPromise } from \"../lifecycles/unload.js\";\nimport {\n  toName,\n  shouldBeActive,\n  NOT_MOUNTED,\n  MOUNTED,\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\nimport { addProfileEntry } from \"../devtools/profiler.js\";\n\nlet appChangeUnderway = false,\n  peopleWaitingOnAppChange = [],\n  currentUrl = isInBrowser && window.location.href;\n\nexport function triggerAppChange() {\n  // Call reroute with no arguments, intentionally\n  return reroute();\n}\n\nexport function reroute(\n  pendingPromises = [],\n  eventArguments,\n  silentNavigation = false\n) {\n  if (appChangeUnderway) {\n    return new Promise((resolve, reject) => {\n      peopleWaitingOnAppChange.push({\n        resolve,\n        reject,\n        eventArguments,\n      });\n    });\n  }\n\n  let startTime, profilerKind;\n\n  if (__PROFILE__) {\n    startTime = performance.now();\n    if (silentNavigation) {\n      profilerKind = \"silentNavigation\";\n    } else if (eventArguments) {\n      profilerKind = \"browserNavigation\";\n    } else {\n      profilerKind = \"triggerAppChange\";\n    }\n  }\n\n  const { appsToUnload, appsToUnmount, appsToLoad, appsToMount } =\n    getAppChanges();\n  let appsThatChanged,\n    cancelPromises = [],\n    oldUrl = currentUrl,\n    newUrl = (currentUrl = window.location.href);\n\n  if (isStarted()) {\n    appChangeUnderway = true;\n    appsThatChanged = appsToUnload.concat(\n      appsToLoad,\n      appsToUnmount,\n      appsToMount\n    );\n    return performAppChanges();\n  } else {\n    appsThatChanged = appsToLoad;\n    return loadApps();\n  }\n\n  function cancelNavigation(val = true) {\n    const promise =\n      typeof val?.then === \"function\" ? val : Promise.resolve(val);\n    cancelPromises.push(\n      promise.catch((err) => {\n        console.warn(\n          Error(\n            formatErrorMessage(\n              42,\n              __DEV__ &&\n                `single-spa: A cancelNavigation promise rejected with the following value: ${err}`\n            )\n          )\n        );\n        console.warn(err);\n\n        // Interpret a Promise rejection to mean that the navigation should not be canceled\n        return false;\n      })\n    );\n  }\n\n  function loadApps() {\n    return Promise.resolve().then(() => {\n      const loadPromises = appsToLoad.map(toLoadPromise);\n      let succeeded;\n\n      return (\n        Promise.all(loadPromises)\n          .then(callAllEventListeners)\n          // there are no mounted apps, before start() is called, so we always return []\n          .then(() => {\n            if (__PROFILE__) {\n              succeeded = true;\n            }\n\n            return [];\n          })\n          .catch((err) => {\n            if (__PROFILE__) {\n              succeeded = false;\n            }\n\n            callAllEventListeners();\n            throw err;\n          })\n          .finally(() => {\n            if (__PROFILE__) {\n              addProfileEntry(\n                \"routing\",\n                \"loadApps\",\n                profilerKind,\n                startTime,\n                performance.now(),\n                succeeded\n              );\n            }\n          })\n      );\n    });\n  }\n\n  function performAppChanges() {\n    return Promise.resolve().then(() => {\n      // https://github.com/single-spa/single-spa/issues/545\n      fireSingleSpaEvent(\n        appsThatChanged.length === 0\n          ? \"before-no-app-change\"\n          : \"before-app-change\",\n        getCustomEventDetail(true)\n      );\n\n      fireSingleSpaEvent(\n        \"before-routing-event\",\n        getCustomEventDetail(true, { cancelNavigation })\n      );\n\n      return Promise.all(cancelPromises).then((cancelValues) => {\n        const navigationIsCanceled = cancelValues.some((v) => v);\n\n        if (navigationIsCanceled) {\n          // Change url back to old url, without triggering the normal single-spa reroute\n          originalReplaceState.call(\n            window.history,\n            history.state,\n            \"\",\n            oldUrl.substring(location.origin.length)\n          );\n\n          // Single-spa's internal tracking of current url needs to be updated after the url change above\n          currentUrl = location.href;\n\n          // necessary for the reroute function to know that the current reroute is finished\n          appChangeUnderway = false;\n\n          if (__PROFILE__) {\n            addProfileEntry(\n              \"routing\",\n              \"navigationCanceled\",\n              profilerKind,\n              startTime,\n              performance.now(),\n              true\n            );\n          }\n\n          // Tell single-spa to reroute again, this time with the url set to the old URL\n          return reroute(pendingPromises, eventArguments, true);\n        }\n\n        const unloadPromises = appsToUnload.map(toUnloadPromise);\n\n        const unmountUnloadPromises = appsToUnmount\n          .map(toUnmountPromise)\n          .map((unmountPromise) => unmountPromise.then(toUnloadPromise));\n\n        const allUnmountPromises = unmountUnloadPromises.concat(unloadPromises);\n\n        const unmountAllPromise = Promise.all(allUnmountPromises);\n\n        let unmountFinishedTime;\n\n        unmountAllPromise.then(\n          () => {\n            if (__PROFILE__) {\n              unmountFinishedTime = performance.now();\n\n              addProfileEntry(\n                \"routing\",\n                \"unmountAndUnload\",\n                profilerKind,\n                startTime,\n                performance.now(),\n                true\n              );\n            }\n            fireSingleSpaEvent(\n              \"before-mount-routing-event\",\n              getCustomEventDetail(true)\n            );\n          },\n          (err) => {\n            if (__PROFILE__) {\n              addProfileEntry(\n                \"routing\",\n                \"unmountAndUnload\",\n                profilerKind,\n                startTime,\n                performance.now(),\n                true\n              );\n            }\n\n            throw err;\n          }\n        );\n\n        /* We load and bootstrap apps while other apps are unmounting, but we\n         * wait to mount the app until all apps are finishing unmounting\n         */\n        const loadThenMountPromises = appsToLoad.map((app) => {\n          return toLoadPromise(app).then((app) =>\n            tryToBootstrapAndMount(app, unmountAllPromise)\n          );\n        });\n\n        /* These are the apps that are already bootstrapped and just need\n         * to be mounted. They each wait for all unmounting apps to finish up\n         * before they mount.\n         */\n        const mountPromises = appsToMount\n          .filter((appToMount) => appsToLoad.indexOf(appToMount) < 0)\n          .map((appToMount) => {\n            return tryToBootstrapAndMount(appToMount, unmountAllPromise);\n          });\n        return unmountAllPromise\n          .catch((err) => {\n            callAllEventListeners();\n            throw err;\n          })\n          .then(() => {\n            /* Now that the apps that needed to be unmounted are unmounted, their DOM navigation\n             * events (like hashchange or popstate) should have been cleaned up. So it's safe\n             * to let the remaining captured event listeners to handle about the DOM event.\n             */\n            callAllEventListeners();\n\n            return Promise.all(loadThenMountPromises.concat(mountPromises))\n              .catch((err) => {\n                pendingPromises.forEach((promise) => promise.reject(err));\n                throw err;\n              })\n              .then(finishUpAndReturn)\n              .then(\n                () => {\n                  if (__PROFILE__) {\n                    addProfileEntry(\n                      \"routing\",\n                      \"loadAndMount\",\n                      profilerKind,\n                      unmountFinishedTime,\n                      performance.now(),\n                      true\n                    );\n                  }\n                },\n                (err) => {\n                  if (__PROFILE__) {\n                    addProfileEntry(\n                      \"routing\",\n                      \"loadAndMount\",\n                      profilerKind,\n                      unmountFinishedTime,\n                      performance.now(),\n                      false\n                    );\n                  }\n\n                  throw err;\n                }\n              );\n          });\n      });\n    });\n  }\n\n  function finishUpAndReturn() {\n    const returnValue = getMountedApps();\n    pendingPromises.forEach((promise) => promise.resolve(returnValue));\n\n    try {\n      const appChangeEventName =\n        appsThatChanged.length === 0 ? \"no-app-change\" : \"app-change\";\n      fireSingleSpaEvent(appChangeEventName, getCustomEventDetail());\n      fireSingleSpaEvent(\"routing-event\", getCustomEventDetail());\n    } catch (err) {\n      /* We use a setTimeout because if someone else's event handler throws an error, single-spa\n       * needs to carry on. If a listener to the event throws an error, it's their own fault, not\n       * single-spa's.\n       */\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    /* Setting this allows for subsequent calls to reroute() to actually perform\n     * a reroute instead of just getting queued behind the current reroute call.\n     * We want to do this after the mounting/unmounting is done but before we\n     * resolve the promise for the `reroute` function.\n     */\n    appChangeUnderway = false;\n\n    if (peopleWaitingOnAppChange.length > 0) {\n      /* While we were rerouting, someone else triggered another reroute that got queued.\n       * So we need reroute again.\n       */\n      const nextPendingPromises = peopleWaitingOnAppChange;\n      peopleWaitingOnAppChange = [];\n      reroute(nextPendingPromises);\n    }\n\n    return returnValue;\n  }\n\n  /* We need to call all event listeners that have been delayed because they were\n   * waiting on single-spa. This includes haschange and popstate events for both\n   * the current run of performAppChanges(), but also all of the queued event listeners.\n   * We want to call the listeners in the same order as if they had not been delayed by\n   * single-spa, which means queued ones first and then the most recent one.\n   */\n  function callAllEventListeners() {\n    // During silent navigation (when navigation was canceled and we're going back to the old URL),\n    // we should not fire any popstate / hashchange events\n    if (!silentNavigation) {\n      pendingPromises.forEach((pendingPromise) => {\n        callCapturedEventListeners(pendingPromise.eventArguments);\n      });\n\n      callCapturedEventListeners(eventArguments);\n    }\n  }\n\n  function getCustomEventDetail(isBeforeChanges = false, extraProperties) {\n    const newAppStatuses = {};\n    const appsByNewStatus = {\n      // for apps that were mounted\n      [MOUNTED]: [],\n      // for apps that were unmounted\n      [NOT_MOUNTED]: [],\n      // apps that were forcibly unloaded\n      [NOT_LOADED]: [],\n      // apps that attempted to do something but are broken now\n      [SKIP_BECAUSE_BROKEN]: [],\n    };\n\n    if (isBeforeChanges) {\n      appsToLoad.concat(appsToMount).forEach((app, index) => {\n        addApp(app, MOUNTED);\n      });\n      appsToUnload.forEach((app) => {\n        addApp(app, NOT_LOADED);\n      });\n      appsToUnmount.forEach((app) => {\n        addApp(app, NOT_MOUNTED);\n      });\n    } else {\n      appsThatChanged.forEach((app) => {\n        addApp(app);\n      });\n    }\n\n    const result = {\n      detail: {\n        newAppStatuses,\n        appsByNewStatus,\n        totalAppChanges: appsThatChanged.length,\n        originalEvent: eventArguments?.[0],\n        oldUrl,\n        newUrl,\n      },\n    };\n\n    if (extraProperties) {\n      assign(result.detail, extraProperties);\n    }\n\n    return result;\n\n    function addApp(app, status) {\n      const appName = toName(app);\n      status = status || getAppStatus(appName);\n      newAppStatuses[appName] = status;\n      const statusArr = (appsByNewStatus[status] =\n        appsByNewStatus[status] || []);\n      statusArr.push(appName);\n    }\n  }\n\n  function fireSingleSpaEvent(name, eventProperties) {\n    // During silent navigation (caused by navigation cancelation), we should not\n    // fire any single-spa events\n    if (!silentNavigation) {\n      window.dispatchEvent(\n        new CustomEvent(`single-spa:${name}`, eventProperties)\n      );\n    }\n  }\n}\n\n/**\n * Let's imagine that some kind of delay occurred during application loading.\n * The user without waiting for the application to load switched to another route,\n * this means that we shouldn't bootstrap and mount that application, thus we check\n * twice if that application should be active before bootstrapping and mounting.\n * https://github.com/single-spa/single-spa/issues/524\n */\nfunction tryToBootstrapAndMount(app, unmountAllPromise) {\n  if (shouldBeActive(app)) {\n    return toBootstrapPromise(app).then((app) =>\n      unmountAllPromise.then(() =>\n        shouldBeActive(app) ? toMountPromise(app) : app\n      )\n    );\n  } else {\n    return unmountAllPromise.then(() => app);\n  }\n}\n", "import { reroute } from \"./navigation/reroute.js\";\nimport { patchHistoryApi } from \"./navigation/navigation-events.js\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nlet started = false;\n\nexport function start(opts) {\n  started = true;\n  if (isInBrowser) {\n    patchHistoryApi(opts);\n    reroute();\n  }\n}\n\nexport function isStarted() {\n  return started;\n}\n", "import { getRawAppData, unregisterApplication } from \"../applications/apps\";\nimport { reroute } from \"../navigation/reroute\";\nimport { NOT_LOADED } from \"../applications/app.helpers\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\nimport { getProfilerData } from \"./profiler\";\n\nexport default {\n  getRawAppData,\n  reroute,\n  NOT_LOADED,\n  toLoadPromise,\n  toBootstrapPromise,\n  unregisterApplication,\n  getProfilerData,\n};\n", "export { start } from \"./start.js\";\nexport { ensureJQuerySupport } from \"./jquery-support.js\";\nexport {\n  setBootstrapMaxTime,\n  setMountMaxTime,\n  setUnmountMaxTime,\n  setUnloadMaxTime,\n} from \"./applications/timeouts.js\";\nexport {\n  registerApplication,\n  unregisterApplication,\n  getMountedApps,\n  getAppStatus,\n  unloadApplication,\n  checkActivityFunctions,\n  getAppNames,\n  pathToActiveWhen,\n} from \"./applications/apps.js\";\nexport {\n  navigateToUrl,\n  patchHistoryApi,\n} from \"./navigation/navigation-events.js\";\nexport { triggerAppChange } from \"./navigation/reroute.js\";\nexport {\n  addErrorHandler,\n  removeErrorHandler,\n} from \"./applications/app-errors.js\";\nexport { mountRootParcel } from \"./parcels/mount-parcel.js\";\n\nexport {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTING,\n  UPDATING,\n  LOAD_ERROR,\n  MOUNTED,\n  UNLOADING,\n  UNMOUNTING,\n  SKIP_BECAUSE_BROKEN,\n} from \"./applications/app.helpers.js\";\n\nimport devtools from \"./devtools/devtools\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nif (isInBrowser && window.__SINGLE_SPA_DEVTOOLS__) {\n  window.__SINGLE_SPA_DEVTOOLS__.exposedMethods = devtools;\n}\n"],
  "mappings": "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",
  "names": ["global", "CustomEvent", "errorHandlers", "handleAppError", "err", "app", "newStatus", "transformedErr", "transformErr", "length", "forEach", "handler", "setTimeout", "addErrorHandler", "Error", "formatErrorMessage", "push", "removeErrorHandler", "removedSomething", "filter", "h", "isHandler", "code", "msg", "args", "join", "ogErr", "appOrParcel", "errPrefix", "objectType", "toName", "status", "result", "message", "console", "warn", "JSON", "stringify", "appOrParcelName", "NOT_LOADED", "LOADING_SOURCE_CODE", "NOT_BOOTSTRAPPED", "BOOTSTRAPPING", "NOT_MOUNTED", "MOUNTING", "MOUNTED", "UPDATING", "UNMOUNTING", "UNLOADING", "LOAD_ERROR", "SKIP_BECAUSE_BROKEN", "isActive", "shouldBeActive", "activeWhen", "window", "location", "name", "isParcel", "Boolean", "unmountThisParcel", "assign", "i", "arguments", "key", "find", "arr", "func", "validLifecycleFn", "fn", "isArrayOfFns", "Array", "isArray", "item", "flattenFnArray", "lifecycle", "fns", "Promise", "resolve", "type", "props", "reduce", "resultPromise", "index", "then", "thisPromise", "smellsLikeAPromise", "reject", "promise", "catch", "profileEntries", "getProfilerData", "addProfileEntry", "kind", "start", "end", "operationSucceeded", "toBootstrapPromise", "hardFail", "startTime", "profileEventType", "performance", "now", "bootstrap", "successfulBootstrap", "reasonableTime", "toUnmountPromise", "unmountChildrenParcels", "Object", "keys", "parcels", "map", "parcelId", "all", "unmountAppOrParcel", "parcelError", "parentError", "beforeFirstMountFired", "firstMountFired", "toMountPromise", "dispatchEvent", "setSkipBecauseBroken", "toUpdatePromise", "parcelCount", "rootParcels", "mountRootParcel", "mountParcel", "apply", "config", "customProps", "owningAppOrParcel", "id", "domElement", "passedConfigLoadingFunction", "configLoadingFunction", "parcel", "parentName", "mountPromise", "value", "resolveUnmount", "rejectUnmount", "externalRepresentation", "loadPromise", "prototype", "hasOwnProperty", "call", "mount", "unmount", "update", "timeouts", "ensureValidAppTimeouts", "promiseWithoutReturnValue", "bootstrapPromise", "unmountPromise", "getStatus", "getProps", "bind", "singleSpa", "unmountSelf", "defaultWarningMillis", "globalTimeoutConfig", "millis", "dieOnTimeout", "warningMillis", "unload", "setBootstrapMaxTime", "time", "setMountMaxTime", "setUnmountMaxTime", "setUnloadMaxTime", "timeoutConfig", "warningPeriod", "finished", "errored", "val", "maybeTimingOut", "errMsg", "shouldError", "error", "numWarnings", "numMillis", "toLoadPromise", "appOpts", "isUserErr", "loadApp", "loadErrorTime", "validationErrMessage", "validationErrCode", "appOptsStr", "devtools", "overlays", "Date", "getTime", "isInBrowser", "capturedEventListeners", "hashchange", "popstate", "routingEventsListeningTo", "navigateToUrl", "obj", "url", "href", "currentTarget", "preventDefault", "current", "parseUri", "destination", "indexOf", "hash", "host", "pathname", "search", "history", "pushState", "callCapturedEventListeners", "eventArguments", "eventType", "listener", "e", "urlRerouteOnly", "urlReroute", "reroute", "patchedUpdateState", "updateState", "methodName", "urlBefore", "urlAfter", "createPopStateEvent", "state", "originalMethodName", "evt", "PopStateEvent", "document", "createEvent", "initPopStateEvent", "singleSpaTrigger", "originalReplaceState", "historyApiIsPatched", "patchHistoryApi", "opts", "replaceState", "addEventListener", "originalAddEventListener", "originalRemoveEventListener", "removeEventListener", "eventName", "listenerFn", "singleSpaNavigate", "str", "anchor", "createElement", "hasInitialized", "ensureJQuerySupport", "jQuery", "$", "jquery", "originalJQueryOn", "on", "originalJQueryOff", "off", "eventString", "captureRoutingEvents", "originalJQueryFunction", "nativeFunctionToCall", "originalArgs", "eventNames", "split", "replace", "trim", "appsToUnload", "toUnloadPromise", "unloadInfo", "finishUnloadingApp", "unloadPromise", "errorUnloadingApp", "addAppToUnload", "promiseGetter", "defineProperty", "get", "getAppUnloadInfo", "appName", "apps", "getAppChanges", "appsToUnmount", "appsToLoad", "appsToMount", "currentTime", "appShouldBeActive", "getMountedApps", "getAppNames", "getRawAppData", "getAppStatus", "startWarningInitialized", "registerApplication", "appNameOrConfig", "appOrLoadApp", "registration", "sanitizeArguments", "isStarted", "options", "selectors", "checkActivityFunctions", "unregisterApplication", "unloadApplication", "waitForUnmount", "appIndex", "splice", "App", "appUnloadInfo", "immediatelyUnloadApp", "activeApp", "triggerAppChange", "validateRegisterWithArguments", "validCustomProps", "validateRegisterWithConfig", "validKeys", "invalidKeys", "prop", "concat", "allowsStringAndFunction", "every", "usingObjectAPI", "sanitizeLoadApp", "sanitizeCustomProps", "sanitizeActiveWhen", "activeWhenArray", "activeWhenOrPath", "pathToActiveWhen", "some", "path", "exactMatch", "regex", "toDynamicPathValidatorRegex", "origin", "protocol", "route", "test", "lastIndex", "inDynamic", "regexStr", "charIndex", "char", "startOfDynamic", "endOfDynamic", "appendToRegex", "RegExp", "anyCharMaybeTrailingSlashRegex", "commonStringSubPath", "escapeStrRegex", "slice", "suffix", "charAt", "appChangeUnderway", "peopleWaitingOnAppChange", "currentUrl", "pendingPromises", "silentNavigation", "profilerKind", "appsThatChanged", "cancelPromises", "oldUrl", "newUrl", "performAppChanges", "loadApps", "cancelNavigation", "loadPromises", "succeeded", "callAllEventListeners", "finally", "fireSingleSpaEvent", "getCustomEventDetail", "cancelValues", "navigationIsCanceled", "v", "substring", "unloadPromises", "unmountUnloadPromises", "allUnmountPromises", "unmountAllPromise", "unmountFinishedTime", "loadThenMountPromises", "tryToBootstrapAndMount", "mountPromises", "appToMount", "finishUpAndReturn", "returnValue", "appChangeEventName", "nextPendingPromises", "pendingPromise", "isBeforeChanges", "extraProperties", "newAppStatuses", "appsByNewStatus", "addApp", "detail", "totalAppChanges", "originalEvent", "statusArr", "eventProperties", "started", "__SINGLE_SPA_DEVTOOLS__", "exposedMethods"]
}
